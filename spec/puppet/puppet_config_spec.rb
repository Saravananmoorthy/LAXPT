require 'spec_helper'

describe "tests for puppet.conf" do
  describe command('puppet config print') do

    its(:stdout) { should match /cfacter = false/ }
    its(:stdout) { should match /confdir = \/etc\/puppetlabs\/puppet/ }
    its(:stdout) { should match /codedir = \/etc\/puppetlabs\/code/ }
    its(:stdout) { should match /vardir = \/opt\/puppetlabs\/puppet\/cache/ }
    its(:stdout) { should match /logdir = \/var\/log\/puppetlabs\/puppet/ }
    its(:stdout) { should match /log_level = notice/ }
    its(:stdout) { should match /disable_warnings = \[\]/ }
    its(:stdout) { should match /priority =/ }
    its(:stdout) { should match /trace = false/ }
    its(:stdout) { should match /profile = false/ }
    its(:stdout) { should match /static_catalogs = true/ }
    its(:stdout) { should match /strict_environment_mode = false/ }
    its(:stdout) { should match /autoflush = true/ }
    its(:stdout) { should match /syslogfacility = daemon/ }
    its(:stdout) { should match /statedir = \/opt\/puppetlabs\/puppet\/cache\/state/ }
    its(:stdout) { should match /rundir = \/var\/run\/puppetlabs/ }
    its(:stdout) { should match /genconfig = false/ }
    its(:stdout) { should match /genmanifest = false/ }
    its(:stdout) { should match /configprint =/ }
    its(:stdout) { should match /color = ansi/ }
    its(:stdout) { should match /mkusers = false/ }
    its(:stdout) { should match /manage_internal_file_permissions = true/ }
    its(:stdout) { should match /onetime = false/ }
    its(:stdout) { should match /path = none/ }
    its(:stdout) { should match /libdir = \/opt\/puppetlabs\/puppet\/cache\/lib/ }
    its(:stdout) { should match /environment = production/ }
    its(:stdout) { should match /environmentpath = \/etc\/puppetlabs\/code\/environments/ }
    its(:stdout) { should match /always_cache_features = false/ }
    its(:stdout) { should match /diff_args = -u/ }
    its(:stdout) { should match /diff = diff/ }
    its(:stdout) { should match /show_diff = false/ }
    its(:stdout) { should match /daemonize = true/ }
    its(:stdout) { should match /route_file = \/etc\/puppetlabs\/puppet\/routes.yaml/ }
    its(:stdout) { should match /hiera_config = \/etc\/puppetlabs\/code\/hiera.yaml/ }
    its(:stdout) { should match /node_terminus = plain/ }
    its(:stdout) { should match /catalog_terminus = compiler/ }
    its(:stdout) { should match /facts_terminus = facter/ }
    its(:stdout) { should match /default_file_terminus = rest/ }
    its(:stdout) { should match /http_proxy_host = none/ }
    its(:stdout) { should match /http_proxy_port = 3128/ }
    its(:stdout) { should match /http_connect_timeout = 120/ }
    its(:stdout) { should match /preview_outputdir = \/opt\/puppetlabs\/puppet\/cache\/preview/ }
    its(:stdout) { should match /module_repository = https:\/\/forgeapi.puppetlabs.com/ }
    its(:stdout) { should match /module_working_dir = \/opt\/puppetlabs\/puppet\/cache\/puppet-module/ }
    its(:stdout) { should match /module_skeleton_dir = \/opt\/puppetlabs\/puppet\/cache\/puppet-module\/skeleton/ }
    its(:stdout) { should match /certname = puppetmaster.dev.efinancialcareers.com/ }
    its(:stdout) { should match /csr_attributes = \/etc\/puppetlabs\/puppet\/csr_attributes.yaml/ }
    its(:stdout) { should match /certdir = \/etc\/puppetlabs\/puppet\/ssl\/certs/ }
    its(:stdout) { should match /ssldir = \/etc\/puppetlabs\/puppet\/ssl/ }
    its(:stdout) { should match /publickeydir = \/etc\/puppetlabs\/puppet\/ssl\/public_keys/ }
    its(:stdout) { should match /requestdir = \/etc\/puppetlabs\/puppet\/ssl\/certificate_requests/ }
    its(:stdout) { should match /privatekeydir = \/etc\/puppetlabs\/puppet\/ssl\/private_keys/ }
    its(:stdout) { should match /privatedir = \/etc\/puppetlabs\/puppet\/ssl\/private/ }
    its(:stdout) { should match /passfile = \/etc\/puppetlabs\/puppet\/ssl\/private\/password/ }
    its(:stdout) { should match /hostcsr = \/etc\/puppetlabs\/puppet\/ssl\/csr_puppetmaster.dev.efinancialcareers.com.pem/ }
    its(:stdout) { should match /hostcert = \/etc\/puppetlabs\/puppet\/ssl\/certs\/puppetmaster.dev.efinancialcareers.com.pem/ }
    its(:stdout) { should match /hostprivkey = \/etc\/puppetlabs\/puppet\/ssl\/private_keys\/puppetmaster.dev.efinancialcareers.com.pem/ }
    its(:stdout) { should match /hostpubkey = \/etc\/puppetlabs\/puppet\/ssl\/public_keys\/puppetmaster.dev.efinancialcareers.com.pem/ }
    its(:stdout) { should match /localcacert = \/etc\/puppetlabs\/puppet\/ssl\/certs\/ca.pem/ }
    its(:stdout) { should match /hostcrl = \/etc\/puppetlabs\/puppet\/ssl\/crl.pem/ }
    its(:stdout) { should match /ca_name = Puppet CA: puppetmaster.dev.efinancialcareers.com/ }
    its(:stdout) { should match /supported_checksum_types = ["md5", "sha256"]/ }
    its(:stdout) { should match /cadir = \/etc\/puppetlabs\/puppet\/ssl\/ca/ }
    its(:stdout) { should match /cacert = \/etc\/puppetlab\/puppet\/ssl\/ca\/ca_crt.pem/ }
    its(:stdout) { should match /cakey = \/etc\/puppetlabs\/puppet\/ssl\/ca\/ca_key.pem/ }
    its(:stdout) { should match /capub = \/etc\/puppetlabs\/puppet\/ssl\/ca\/ca_pub.pem/ }
    its(:stdout) { should match /cacrl = \/etc\/puppetlabs\/puppet\/ssl\/ca\/ca_crl.pem/ }
    its(:stdout) { should match /caprivatedir = \/etc\/puppetlabs\/puppet\/ssl\/ca\/private/ }
    its(:stdout) { should match /csrdir = \/etc\/puppetlabs\/puppet\/ssl\/ca\/requests/ }
    its(:stdout) { should match /signeddir = \/etc\/puppetlabs\/puppet\/ssl\/ca\/signed/ }
    its(:stdout) { should match /capass = \/etc\/puppetlabs\/puppet\/ssl\/ca\/private\/ca.pass/ }
    its(:stdout) { should match /serial = \/etc\/puppetlabs\/puppet\/ssl\/ca\/serial/ }
    its(:stdout) { should match /autosign = \/etc\/puppetlabs\/puppet\/autosign.conf/ }
    its(:stdout) { should match /cert_inventory = \/etc\/puppetlabs\/puppet\/ssl\/ca\/inventory.txt/ }
    its(:stdout) { should match /config = \/etc\/puppetlabs\/puppet\/puppet.conf/ }
    its(:stdout) { should match /config_file_name = puppet.conf/ }
    its(:stdout) { should match /pidfile = \/var\/run\/puppetlabs\/main.pid/ }
    its(:stdout) { should match /manifest = \/etc\/puppetlabs\/code\/environments\/production\/manifests/ }
    its(:stdout) { should match /modulepath = \/etc\/puppetlabs\/code\/environments\/production\/modules:\/etc\/puppetlabs\/code\/modules:\/opt\/puppetlabs\/puppet\/modules / }
    its(:stdout) { should match /default_manifest = .\/manifests/ }
    its(:stdout) { should match /masterhttplog = \/var\/log\/puppetlabs\/puppet\/masterhttp.log/ }
    its(:stdout) { should match /bucketdir = \/opt\/puppetlabs\/puppet\/cache\/bucket/ }
    its(:stdout) { should match /rest_authconfig = \/etc\/puppetlabs\/puppet\/auth.conf/ }
    its(:stdout) { should match /masterport = 8140/ }
    its(:stdout) { should match /disable_per_environment_manifest = false/ }
    its(:stdout) { should match /bindaddress = 0.0.0.0/ }
    its(:stdout) { should match /user = puppet/ }
    its(:stdout) { should match /group = puppet/ }
    its(:stdout) { should match /node_name = cert/ }
    its(:stdout) { should match /ca = true/ }
    its(:stdout) { should match /basemodulepath = \/etc\/puppetlabs\/code\/modules:\/opt\/puppetlabs\/puppet\/modules/ }
    its(:stdout) { should match /yamldir = \/opt\/puppetlabs\/puppet\/cache\/yaml/ }
    its(:stdout) { should match /reportdir = \/opt\/puppetlabs\/puppet\/cache\/reports/ }
    its(:stdout) { should match /reporturl = http:\/\/localhost:3000\/reports\/upload/ }
    its(:stdout) { should match /client_datadir = \/opt\/puppetlabs\/puppet\/cache\/client_data/ }
    its(:stdout) { should match /classfile = \/opt\/puppetlabs\/puppet\/cache\/state\/classes.txt/ }
    its(:stdout) { should match /resourcefile = \/opt\/puppetlabs\/puppet\/cache\/state\/resources.txt/ }
    its(:stdout) { should match /puppetdlog = \/var\/log\/puppetlabs\/puppet\/puppetd.log/ }
    its(:stdout) { should match /clientyamldir = \/opt\/puppetlabs\/puppet\/cache\/client_yaml/ }
    its(:stdout) { should match /server = puppet/ }
    its(:stdout) { should match /srv_domain = dev.efinancialcareers.com/ }
    its(:stdout) { should match /ca_port = 8140/ }
    its(:stdout) { should match /storeconfigs_backend = puppetdb/ }
    its(:stdout) { should match /ldapparentattr = parentnode/ }
    its(:stdout) { should match /storeconfigs = false / }
    its(:stdout) { should match /external_nodes = none/ }
    its(:stdout) { should match /pluginfactsource = puppet:\/\/\/pluginfacts/ }
    its(:stdout) { should match /pluginsource = puppet:\/\/\/plugins/ }
    its(:stdout) { should match /pluginfactdest = \/opt\/puppetlabs\/puppet\/cache\/facts.d/ }
    its(:stdout) { should match /graphdir = \/opt\/puppetlabs\/puppet\/cache\/state\/graphs/ }
    its(:stdout) { should match /lastrunreport = \/opt\/puppetlabs\/puppet\/cache\/state\/last_run_report.yaml/ }
    its(:stdout) { should match /lastrunfile = \/opt\/puppetlabs\/puppet\/cache\/state\/last_run_summary.yaml/ }
    its(:stdout) { should match /clientbucketdir = \/opt\/puppetlabs\/puppet\/cache\/clientbucket/ }
    its(:stdout) { should match /runinterval = 1800/ }
    its(:stdout) { should match /ca_server = puppet/ }
    its(:stdout) { should match /splaylimit = 1800/ }
    its(:stdout) { should match /eport_server = puppet/ }
    its(:stdout) { should match /noop = false/ }
    its(:stdout) { should match /statefile = \/opt\/puppetlabs\/puppet\/cache\/state\/state.yaml/ }
    its(:stdout) { should match /strict_hostname_checking = false/ }
    its(:stdout) { should match /fileserverconfig = \/etc\/puppetlabs\/puppet\/fileserver.conf/ }
    its(:stdout) { should match /server_datadir = \/opt\/puppetlabs\/puppet\/cache\/server_data/ }
    its(:stdout) { should match /devicedir = \/opt\/puppetlabs\/puppet\/cache\/devices/ }
    its(:stdout) { should match /deviceconfig = \/etc\/puppetlabs\/puppet\/device.conf/ }
    its(:stdout) { should match /node_name_value = puppetmaster.dev.efinancialcareers.com/ }
    its(:stdout) { should match /trusted_oid_mapping_file = \/etc\/puppetlabs\/puppet\/custom_trusted_oid_mapping.yaml/ }
    its(:stdout) { should match /preferred_serialization_format = pson/ }
    its(:stdout) { should match /strict_variables = false/ }
    its(:stdout) { should match /max_errors = 10/ }
    its(:stdout) { should match /pluginsync = true/ }
    its(:stdout) { should match /pluginsignore = .svn CVS .git/ }
    its(:stdout) { should match /factpath = \/opt\/puppetlabs\/puppet\/cache\/lib\/facter:\/opt\/puppetlabs\/puppet\/cache\/facts/ }
    its(:stdout) { should match /plugindest = \/opt\/puppetlabs\/puppet\/cache\/lib/ }
    its(:stdout) { should match /archive_file_server = puppet/ }
    its(:stdout) { should match /archive_files = false/ }
    its(:stdout) { should match /waitforcert = 120/ }
    its(:stdout) { should match /ordering = manifest/ }
    its(:stdout) { should match /graph = false/ }
    its(:stdout) { should match /report_port = 8140/ }
    its(:stdout) { should match /report = true/ }
    its(:stdout) { should match /configtimeout = 120/ }
    its(:stdout) { should match /agent_disabled_lockfile = \/opt\/puppetlabs\/puppet\/cache\/state\/agent_disabled.lock/ }
    its(:stdout) { should match /agent_catalog_run_lockfile = \/opt\/puppetlabs\/puppet\/cache\/state\/agent_catalog_run.lock/ }
    its(:stdout) { should match /digest_algorithm = md5/ }
    its(:stdout) { should match /allow_duplicate_certs = false/ }
    its(:stdout) { should match /certificate_revocation = true/ }
  end
end
